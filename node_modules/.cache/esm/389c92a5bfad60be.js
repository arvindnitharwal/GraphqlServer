let makeExecutableSchema,merge,userBasetypeDef,userBaseResolvers;_bfa‍.x([["default",()=>_bfa‍.o]]);_bfa‍.w("graphql-tools",[["makeExecutableSchema",["makeExecutableSchema"],function(v){makeExecutableSchema=v}]]);_bfa‍.w("lodash.merge",[["default",["merge"],function(v){merge=v}]]);_bfa‍.w("./userBaseService/typeDef",[["default",["userBasetypeDef"],function(v){userBasetypeDef=v}]]);_bfa‍.w("./userBaseService/resolver",[["default",["userBaseResolvers"],function(v){userBaseResolvers=v}]]);



const typeDefs = [
  userBasetypeDef,
];
const resolvers = merge(
  userBaseResolvers,
);

const schema = makeExecutableSchema({
  typeDefs,
  resolvers,
});
//https://www.apollographql.com/docs/graphql-tools/generate-schema/

// logger, // optional
// allowUndefinedInResolve = false, // optional
// resolverValidationOptions = {}, // optional
// directiveResolvers = null, // optional
// schemaDirectives = null,  // optional
// parseOptions = {},  // optional
// inheritResolversFromInterfaces = false  // optional
_bfa‍.d(schema);